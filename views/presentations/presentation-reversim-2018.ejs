<!DOCTYPE html>
<html>
  <head>
    <title>Front end security</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link rel="stylesheet" href="/reveal/css/reveal.css" />
    <link rel="stylesheet" href="/reveal/css/theme/night.css" />
    
  </head>
  <body>
    <div class="reveal">
			<div class="slides">
				<section data-markdown>
          <textarea data-template>
            ## Web security
            ## Ran Bar-Zik
            #### Developer @ Oath Israel (Yahoo + AOL = unpronounceable)
              - Twitter: @barzik
              - Telegram: interil
              - web: internet-israel.com
              - Github: barzik
          </textarea>
				</section>
				<section>
    			<section data-markdown>
            <textarea data-template>
              # Legal information
              ## DO NOT HACK
            </textarea>
    			</section>
    			<section data-markdown>
            <textarea data-template>
              ### Winds of change
              #### BUT STILL DO NOT HACK
              ![alt text](/images/news/globes-09-2018.png "Globes 2018 Sep")
            </textarea>
    			</section>
    			<section data-markdown>
            <textarea data-template>
              # Why do we learn it?
              #### Learn to break === Learn to protect
            </textarea>
    			</section>
        </section>
        <section>
          <section data-markdown>
            <textarea data-template>
              # Server side Javascript injection (SSJS)
              <p><a href="/shellinjection/ssjs" target="_blank">Simple example of the vulnerability</a></p>
            </textarea>
      		</section>
      		<section data-markdown>
            <textarea data-template>
              # SSJS demo
              <p><a href="/shellinjection/ssjs-attack" target="_blank">Simple example of the attack</a></p>
            </textarea>
    		  </section>
    		  <section data-markdown>
            <textarea data-template>
              # SSJS Prevention
              Don't use eval. You can use [Eslint no-eval](https://eslint.org/docs/rules/no-eval) rule.
              Example: `node_modules/eslint/bin/eslint.js -c ./.eslintrc-ssjs routes/shellinjection.js `
            </textarea>
    		  </section>
    		  <section data-markdown>
            <textarea data-template>
              # Implied eval
              Eval is not only eval. it is in a lot of places. For example setTimeout. 
              ```
              setTimeout("console.log('I am executing text just like eval!')",1000);
              ```
              But it is not relevant for node.js
              But it is good idea to make sure that no one will use strings in setTimeout by using [no-implied-eval rule in eslint](https://eslint.org/docs/rules/no-implied-eval).
            </textarea>
    		  </section>
        </section>
        <section>
          <section data-markdown>
            <textarea data-template>
              # Command injection
              Almost like JS injection
              <p><a href="/shellinjection/command-injection" target="_blank">Simple example of vulnerability</a></p>
              <p><a href="/shellinjection/command-injection-attack" target="_blank">Simple example of attack</a></p>
            </textarea>
    		  </section>
    		  <section data-markdown>
            <textarea data-template>
              # Command injection defense
              1. Use spawn (avoid `{shell: true}`) See [this PR](https://github.com/barzik/branch-name-lint/pull/5/files) for example.
              1. Validate everything.
            </textarea>
    		  </section>
        </section>
        <section>
          <section data-markdown>
            <textarea data-template>
              # intermezzo: validatation VS sanitizatipn
              ![alt text](/images/validationVSSanitization.png "validation VS Sanitization")
            </textarea>
    		  </section>
        </section>


				<section data-markdown>
          <textarea data-template>
            ## Thank you!
            ### I was Ran Bar-Zik from OATH :)
            ### The presentaion is on Github: barzik.
            ### Talk to me: @barzik or LinkedIn.
            #### internet-israel.com
            ###### Hosted on Cloud9\Amazon and used reveal.js 
          </textarea>
    		</section>		
			</div>
		</div>
  </body>
  <script src="/reveal/js/reveal.js"></script>
  <script src="/reveal/plugin/markdown/marked.js"></script>
  <script src="/reveal/plugin/markdown/markdown.js"></script>
  
  <script>
			Reveal.initialize();
	</script>
</html>

